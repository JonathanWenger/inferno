################################################################################
# PEP 621 Project Metadata                                                     #
################################################################################

# see https://peps.python.org/pep-0621/

[project]
name = "inferno"
description = "Bayesian Deep Learning in PyTorch"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["deep learning", "variational inference", "pytorch"]
authors = [
    { name = "Jonathan Wenger", email = "jw4246@columbia.edu" },
    { name = "Beau Coker", email = "bc3107@columbia.edu" },
]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
]
dynamic = ["version"]
dependencies = ["torch>=2.2", "torchvision>=0.20"]

[project.optional-dependencies]
style = ["black>=25.1.0", "isort>=5.13.2", "jaxtyping>=0.2.25"]
docs = ["mkdocs-material>=9.6.11", "mkdocstrings-python>=1.16.12"]
tests = ["pytest>=6.2.5", "pytest-cov>=3.0.0", "tox>=4.19"]
dev = ["inferno[tests]", "inferno[docs]", "inferno[style]"]

[project.urls]
github = "https://github.com/inferno-dl/inferno"

################################################################################
# PEP 518 Build System Configuration                                           #
################################################################################

# see https://peps.python.org/pep-0518/

[build-system]
requires = ["setuptools", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

# see https://setuptools.pypa.io/en/stable/userguide/pyproject_config.html#setuptools-specific-configuration

[tool.setuptools]
platforms = ["any"]
zip-safe = false
packages = ["inferno"]
# package-dir = { "" = "src" }
include-package-data = true

# [tool.setuptools.dynamic]
# version = { attr = "inferno._version.version" }

# [tool.setuptools_scm]
# local_scheme = "dirty-tag"
# write_to = "src/inferno/_version.py"
# write_to_template = """
# # pylint: skip-file
# # coding: utf-8
# # file generated by setuptools_scm
# # don't change, don't track in version control
# version = \"{version}\"
# """

################################################################################
# Testing Configuration                                                        #
################################################################################

# see https://docs.pytest.org/en/stable/reference/customize.html
# see https://docs.pytest.org/en/stable/reference/reference.html#ini-options-ref

[tool.pytest.ini_options]
addopts = ["--verbose", "--doctest-modules"]
norecursedirs = [".*", "*.egg*", "dist", "build", ".tox"]
testpaths = ["inferno", "tests"]
doctest_optionflags = "NUMBER NORMALIZE_WHITESPACE"
filterwarnings = []

################################################################################
# Linting Configuration                                                        #
################################################################################


################################################################################
# Formatting Configuration                                                     #
################################################################################

# see https://black.readthedocs.io/en/stable/usage_and_configuration/index.html

[tool.black]
include = '\.pyi?$'
# If `exclude` is not set, `black` excludes all files listed in `.gitignore`.
# The following option extends this list of ignored files.
# see https://black.readthedocs.io/en/stable/usage_and_configuration/file_collection_and_discovery.html#gitignore
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories in the root
# of the project.
/(
    \.git
    | \.hg
)/
'''

# see https://pycqa.github.io/isort/docs/configuration/config_files.html
# see https://pycqa.github.io/isort/docs/configuration/options.html

[tool.isort]
# see https://pycqa.github.io/isort/docs/configuration/profiles.html#black
profile = "black"
combine_as_imports = true
force_sort_within_sections = true
known_testing = ["pytest", "pytest_cases"]
sections = [
    'FUTURE',
    'STDLIB',
    'THIRDPARTY',
    'FIRSTPARTY',
    'LOCALFOLDER',
    'TESTING',
]

################################################################################
# Tox Configuration                                                            #
################################################################################

[tool.tox]
env_list = ["py3", "format", "docs"]

[tool.tox.env_run_base]
description = "Run test under {base_python} using pytest."
extras = ["tests"]
commands = [
    [
        "pytest",
        { replace = "posargs", extend = true, default = [
            "{tox_root}{/}tests",
            "--doctest-modules",
            "--color=yes",
        ] },
    ],
]

[tool.tox.env.format]
description = "Format the code."
extras = ["style"]
commands = [
    [
        "black",
        { replace = "posargs", extend = true, default = [
            "{tox_root}",
        ] },
    ],
    [
        "isort",
        { replace = "posargs", extend = true, default = [
            "{tox_root}",
        ] },
    ],
]

[tool.tox.env.docs]
description = "Build the documentation."
extras = ["style", "docs"]
commands = [
    [
        "mkdocs",
        { replace = "posargs", extend = true, default = [
            "{tox_root}",
            "build",
        ] },
    ],
]
